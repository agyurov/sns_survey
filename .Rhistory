cat(paste0("Returning ",paste0(arg[out],collapse = ", "),".\n"))
# new ---
for(i in 1:length(out)){
assign(arg[out[i]],as.list(env)[arg[out[i]]],envir = .GlobalEnv)
}
# end new ---
return(as.list(env)[arg[out]])
}
}
# -----------------------------------------
# Add to bucket
if(add & !rmv){
# Overwriting
if(any(out)){
for(i in arg[out]){
ans = readline(paste0(i," already exist in bucket. Overwrrite? y/n: \n"))
if(ans == "y"){
assign(i,eval(parse(text = i)),envir = env)
cat(paste0(i," added to the bucket!\n"))
}
if(ans == "n"){}
if(!ans %in% c("y","n")){
warning("Exitted function - answer me! ")
}
}
}
# Not overwriting, just adding
for(i in arg[!out]){
if(exists(i,envir = .GlobalEnv)){
assign(i,eval(parse(text = i)),envir = env)
cat(paste0(i," added to the bucket!\n"))
}
if(!exists(i,envir = .GlobalEnv)){
cat(paste0("Object ",i," does not exist!\n"))
}
}
}
# Remove items from bucket
if(rmv){
for(i in arg){
if(!all(out)){
cat(paste0(paste0(arg[!out],collapse=", ")," not in the bucket. \n"))
}
if(all(out)){
ans = readline(paste0("Are you sure you want to remove ",i," from the bucket. y/n: "))
if(ans == "y"){
rm(list=i,envir = env)
}
}
}
}
save(ls(envir = .BucketEnv),paste0(getwd(),"/",file),envir = env)
}
bucket.classes(classes)
bucket.classes(classes = classes)
bucket()
q10q19m11_q19.1_isel1_B
bucket(q10q19m11_q19.1_isel1_B)
q10q19m11_q19.1_isel1_B
bucket()
bucket(q10q19m11_q19.1_isel1_B,x_q10fa_)
x_q10fa_
bucket(x_q10fa_)
bucket()
bucket(x_q10fa_)
bucket(x_q10fa_,q10q19m11_q19.)
bucket(x_q10fa_,q10q19m11_q19)
bucket()
bucket(q10q19m11_q19.1_isel1_B)
bucket(q10q19m11_q19.1_isel1_B, x_q10fa_)
rm(list=ls())
x_q10fa_
bucket(q10q19m11_q19.1_isel1_B, x_q10fa_)
bucket = function(...,add = F,env = .BucketEnv,short=T,rmv=F,file = "bucket.RData"){
# Exit if add=F and empty bucket
if(!add & length(as.list(env))==0 & !rmv){
cat("Empty bucket, nothing to find here.\n")
return(invisible(NULL))
}
# display items if add=F and !empty bucket
if(!add & length(as.list(env))!=0 & length(as.character(as.list(substitute(list(...)))[-1]))==0 & !rmv){
cat("In storage: \n")
if(short){
print(lapply(as.list(env),class))
}
if(!short){
print(as.list(env))
}
return(invisible(NULL))
}
arg = as.character(as.list(substitute(list(...)))[-1])
# Check for existence
out = arg %in% ls(env)
# -----------------------------------------
# Return from bucket
if(!add & !rmv){
print(out)
if(!all(out)){
cat(paste0(paste0(arg[!out],collapse=", ")," not in the bucket. \n"))
return(invisible(NULL))
}
if(all(out)){
cat(paste0("Returning ",paste0(arg[out],collapse = ", "),".\n"))
# new ---
for(i in 1:length(out)){
assign(arg[out[i]],as.list(env)[arg[out[i]]],envir = .GlobalEnv)
}
# end new ---
return(as.list(env)[arg[out]])
}
}
# -----------------------------------------
# Add to bucket
if(add & !rmv){
# Overwriting
if(any(out)){
for(i in arg[out]){
ans = readline(paste0(i," already exist in bucket. Overwrrite? y/n: \n"))
if(ans == "y"){
assign(i,eval(parse(text = i)),envir = env)
cat(paste0(i," added to the bucket!\n"))
}
if(ans == "n"){}
if(!ans %in% c("y","n")){
warning("Exitted function - answer me! ")
}
}
}
# Not overwriting, just adding
for(i in arg[!out]){
if(exists(i,envir = .GlobalEnv)){
assign(i,eval(parse(text = i)),envir = env)
cat(paste0(i," added to the bucket!\n"))
}
if(!exists(i,envir = .GlobalEnv)){
cat(paste0("Object ",i," does not exist!\n"))
}
}
}
# Remove items from bucket
if(rmv){
for(i in arg){
if(!all(out)){
cat(paste0(paste0(arg[!out],collapse=", ")," not in the bucket. \n"))
}
if(all(out)){
ans = readline(paste0("Are you sure you want to remove ",i," from the bucket. y/n: "))
if(ans == "y"){
rm(list=i,envir = env)
}
}
}
}
save(ls(envir = .BucketEnv),paste0(getwd(),"/",file),envir = env)
}
bucket(q10q19m11_q19.1_isel1_B, x_q10fa_)
x_q10fa_
q10q19m11_q19.1_isel1_B
rm(list=ls())
q10q19m11_q19.1_isel1_B
bucket(q10q19m11_q19.1_isel1_B, x_q10fa_)
bucket = function(...,add = F,env = .BucketEnv,short=T,rmv=F,file = "bucket.RData"){
# Exit if add=F and empty bucket
if(!add & length(as.list(env))==0 & !rmv){
cat("Empty bucket, nothing to find here.\n")
return(invisible(NULL))
}
# display items if add=F and !empty bucket
if(!add & length(as.list(env))!=0 & length(as.character(as.list(substitute(list(...)))[-1]))==0 & !rmv){
cat("In storage: \n")
if(short){
print(lapply(as.list(env),class))
}
if(!short){
print(as.list(env))
}
return(invisible(NULL))
}
arg = as.character(as.list(substitute(list(...)))[-1])
# Check for existence
out = arg %in% ls(env)
# -----------------------------------------
# Return from bucket
if(!add & !rmv){
print(out)
if(!all(out)){
cat(paste0(paste0(arg[!out],collapse=", ")," not in the bucket. \n"))
return(invisible(NULL))
}
if(all(out)){
cat(paste0("Returning ",paste0(arg[out],collapse = ", "),".\n"))
# new ---
for(i in 1:length(out)){
assign(arg[out[i]],as.list(env)[arg[out[i]]],envir = .GlobalEnv)
}
# end new ---
return(as.list(env)[arg[out]])
}
}
# -----------------------------------------
# Add to bucket
if(add & !rmv){
# Overwriting
if(any(out)){
for(i in arg[out]){
ans = readline(paste0(i," already exist in bucket. Overwrrite? y/n: \n"))
if(ans == "y"){
assign(i,eval(parse(text = i)),envir = env)
cat(paste0(i," added to the bucket!\n"))
}
if(ans == "n"){}
if(!ans %in% c("y","n")){
warning("Exitted function - answer me! ")
}
}
}
# Not overwriting, just adding
for(i in arg[!out]){
if(exists(i,envir = .GlobalEnv)){
assign(i,eval(parse(text = i)),envir = env)
cat(paste0(i," added to the bucket!\n"))
}
if(!exists(i,envir = .GlobalEnv)){
cat(paste0("Object ",i," does not exist!\n"))
}
}
}
# Remove items from bucket
if(rmv){
for(i in arg){
if(!all(out)){
cat(paste0(paste0(arg[!out],collapse=", ")," not in the bucket. \n"))
}
if(all(out)){
ans = readline(paste0("Are you sure you want to remove ",i," from the bucket. y/n: "))
if(ans == "y"){
rm(list=i,envir = env)
}
}
}
}
save(ls(envir = .BucketEnv),paste0(getwd(),"/",file),envir = env)
}
q10q19m11_q19.1_isel1_B
bucket(q10q19m11_q19.1_isel1_B)
x_q10fa_
bucket(x_q10fa_)
x_q10fa_
bucket(q10q19m11_q19.1_isel1_B, x_q10fa_)
rm(list=ls())
bucket = function(...,add = F,env = .BucketEnv,short=T,rmv=F,file = "bucket.RData"){
# Exit if add=F and empty bucket
if(!add & length(as.list(env))==0 & !rmv){
cat("Empty bucket, nothing to find here.\n")
return(invisible(NULL))
}
# display items if add=F and !empty bucket
if(!add & length(as.list(env))!=0 & length(as.character(as.list(substitute(list(...)))[-1]))==0 & !rmv){
cat("In storage: \n")
if(short){
print(lapply(as.list(env),class))
}
if(!short){
print(as.list(env))
}
return(invisible(NULL))
}
arg = as.character(as.list(substitute(list(...)))[-1])
# Check for existence
out = arg %in% ls(env)
# -----------------------------------------
# Return from bucket
if(!add & !rmv){
print(out)
if(!all(out)){
cat(paste0(paste0(arg[!out],collapse=", ")," not in the bucket. \n"))
return(invisible(NULL))
}
if(all(out)){
cat(paste0("Returning ",paste0(arg[out],collapse = ", "),".\n"))
# new ---
for(i in 1:length(out)){
assign(arg[out[i]],as.list(env)[arg[out[i]]],envir = .GlobalEnv)
}
# end new ---
return(as.list(env)[arg[out]])
}
}
# -----------------------------------------
# Add to bucket
if(add & !rmv){
# Overwriting
if(any(out)){
for(i in arg[out]){
ans = readline(paste0(i," already exist in bucket. Overwrrite? y/n: \n"))
if(ans == "y"){
assign(i,eval(parse(text = i)),envir = env)
cat(paste0(i," added to the bucket!\n"))
}
if(ans == "n"){}
if(!ans %in% c("y","n")){
warning("Exitted function - answer me! ")
}
}
}
# Not overwriting, just adding
for(i in arg[!out]){
if(exists(i,envir = .GlobalEnv)){
assign(i,eval(parse(text = i)),envir = env)
cat(paste0(i," added to the bucket!\n"))
}
if(!exists(i,envir = .GlobalEnv)){
cat(paste0("Object ",i," does not exist!\n"))
}
}
}
# Remove items from bucket
if(rmv){
for(i in arg){
if(!all(out)){
cat(paste0(paste0(arg[!out],collapse=", ")," not in the bucket. \n"))
}
if(all(out)){
ans = readline(paste0("Are you sure you want to remove ",i," from the bucket. y/n: "))
if(ans == "y"){
rm(list=i,envir = env)
}
}
}
}
save(ls(envir = .BucketEnv),paste0(getwd(),"/",file),envir = env)
}
bucket( x_q10fa_,q10q19m11_q19.1_isel1_B)
q10q19m11_q19.1_isel1_B
x_q10fa_
bucket = function(...,add = F,env = .BucketEnv,short=T,rmv=F,file = "bucket.RData"){
# Exit if add=F and empty bucket
if(!add & length(as.list(env))==0 & !rmv){
cat("Empty bucket, nothing to find here.\n")
return(invisible(NULL))
}
# display items if add=F and !empty bucket
if(!add & length(as.list(env))!=0 & length(as.character(as.list(substitute(list(...)))[-1]))==0 & !rmv){
cat("In storage: \n")
if(short){
print(lapply(as.list(env),class))
}
if(!short){
print(as.list(env))
}
return(invisible(NULL))
}
arg = as.character(as.list(substitute(list(...)))[-1])
# Check for existence
out = arg %in% ls(env)
print("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOUT")
print(out)
# -----------------------------------------
# Return from bucket
if(!add & !rmv){
print(out)
if(!all(out)){
cat(paste0(paste0(arg[!out],collapse=", ")," not in the bucket. \n"))
return(invisible(NULL))
}
if(all(out)){
cat(paste0("Returning ",paste0(arg[out],collapse = ", "),".\n"))
# new ---
for(i in 1:length(out)){
assign(arg[out[i]],as.list(env)[arg[out[i]]],envir = .GlobalEnv)
}
# end new ---
return(as.list(env)[arg[out]])
}
}
# -----------------------------------------
# Add to bucket
if(add & !rmv){
# Overwriting
if(any(out)){
for(i in arg[out]){
ans = readline(paste0(i," already exist in bucket. Overwrrite? y/n: \n"))
if(ans == "y"){
assign(i,eval(parse(text = i)),envir = env)
cat(paste0(i," added to the bucket!\n"))
}
if(ans == "n"){}
if(!ans %in% c("y","n")){
warning("Exitted function - answer me! ")
}
}
}
# Not overwriting, just adding
for(i in arg[!out]){
if(exists(i,envir = .GlobalEnv)){
assign(i,eval(parse(text = i)),envir = env)
cat(paste0(i," added to the bucket!\n"))
}
if(!exists(i,envir = .GlobalEnv)){
cat(paste0("Object ",i," does not exist!\n"))
}
}
}
# Remove items from bucket
if(rmv){
for(i in arg){
if(!all(out)){
cat(paste0(paste0(arg[!out],collapse=", ")," not in the bucket. \n"))
}
if(all(out)){
ans = readline(paste0("Are you sure you want to remove ",i," from the bucket. y/n: "))
if(ans == "y"){
rm(list=i,envir = env)
}
}
}
}
save(ls(envir = .BucketEnv),paste0(getwd(),"/",file),envir = env)
}
bucket()
bucket(x_q10fa_, q10q19m11_q19.1_isel1_B)
bucket = function(...,add = F,env = .BucketEnv,short=T,rmv=F,file = "bucket.RData"){
# Exit if add=F and empty bucket
if(!add & length(as.list(env))==0 & !rmv){
cat("Empty bucket, nothing to find here.\n")
return(invisible(NULL))
}
# display items if add=F and !empty bucket
if(!add & length(as.list(env))!=0 & length(as.character(as.list(substitute(list(...)))[-1]))==0 & !rmv){
cat("In storage: \n")
if(short){
print(lapply(as.list(env),class))
}
if(!short){
print(as.list(env))
}
return(invisible(NULL))
}
arg = as.character(as.list(substitute(list(...)))[-1])
# Check for existence
out = arg %in% ls(env)
print("OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOUT")
print(arg)
# -----------------------------------------
# Return from bucket
if(!add & !rmv){
if(!all(out)){
cat(paste0(paste0(arg[!out],collapse=", ")," not in the bucket. \n"))
return(invisible(NULL))
}
if(all(out)){
cat(paste0("Returning ",paste0(arg[out],collapse = ", "),".\n"))
# new ---
for(i in 1:length(out)){
assign(arg[out[i]],as.list(env)[arg[out[i]]],envir = .GlobalEnv)
}
# end new ---
return(as.list(env)[arg[out]])
}
}
# -----------------------------------------
# Add to bucket
if(add & !rmv){
# Overwriting
if(any(out)){
for(i in arg[out]){
ans = readline(paste0(i," already exist in bucket. Overwrrite? y/n: \n"))
if(ans == "y"){
assign(i,eval(parse(text = i)),envir = env)
cat(paste0(i," added to the bucket!\n"))
}
if(ans == "n"){}
if(!ans %in% c("y","n")){
warning("Exitted function - answer me! ")
}
}
}
# Not overwriting, just adding
for(i in arg[!out]){
if(exists(i,envir = .GlobalEnv)){
assign(i,eval(parse(text = i)),envir = env)
cat(paste0(i," added to the bucket!\n"))
}
if(!exists(i,envir = .GlobalEnv)){
cat(paste0("Object ",i," does not exist!\n"))
}
}
}
# Remove items from bucket
if(rmv){
for(i in arg){
if(!all(out)){
cat(paste0(paste0(arg[!out],collapse=", ")," not in the bucket. \n"))
}
if(all(out)){
ans = readline(paste0("Are you sure you want to remove ",i," from the bucket. y/n: "))
if(ans == "y"){
rm(list=i,envir = env)
}
}
}
}
save(ls(envir = .BucketEnv),paste0(getwd(),"/",file),envir = env)
}
bucket(x_q10fa_, q10q19m11_q19.1_isel1_B)
cat("\014")
rm(list = ls())
wd = getwd()
data_file = "all_data.RData"
source("libraries.R")
source("functions.R")
source("data_prep.R")
